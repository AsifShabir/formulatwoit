<?php

namespace App\Console;

use App\Business;
use Illuminate\Console\Scheduling\Schedule;
use Illuminate\Foundation\Console\Kernel as ConsoleKernel;

class Kernel extends ConsoleKernel
{
    /**
     * Define the application's command schedule.
     *
     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule
     * @return void
     */
    protected function schedule(Schedule $schedule)
    {
        $env = config('app.env');
        $email = config('mail.username');

        //Set timezone to business timezone
        $business_id = 1;
        $business = Business::findOrFail($business_id);
        $timezone = $business->time_zone;
        config(['app.timezone' => $timezone]);
        date_default_timezone_set($timezone);

        $schedule->command('pos:HeadPressurizerSyncOrder')->hourly();
        $schedule->command('pos:TuboPlusSyncOrder')->hourly();
        $schedule->command('pos:Psi29SyncOrder')->hourly();
        $schedule->command('pos:MiraviaSyncOrder')->hourly();
        $schedule->command('pos:DecathlonSyncOrder')->hourly();
        $schedule->command('pos:AmazonSyncOrder')->hourly();


        $schedule->command('pos:GenerateShippingLabels')->dailyAt('07:00')->timezone('Europe/Paris')->emailOutputTo("haider8278@gmail.com");
        $schedule->command('pos:GenerateShippingLabelsGLS')->dailyAt('07:05')->timezone('Europe/Paris')->emailOutputTo("haider8278@gmail.com");

        if ($env === 'live' || $env === 'production') {
            //Scheduling backup, specify the time when the backup will get cleaned & time when it will run.
            $schedule->command('backup:run')->dailyAt('22:50');
            $schedule->command('pos:lowstockreminder')->dailyAt('23:00');

            //Schedule to create recurring invoices
            $schedule->command('pos:generateSubscriptionInvoices')->dailyAt('23:20');
            $schedule->command('pos:updateRewardPoints')->dailyAt('23:30');

            $schedule->command('pos:autoSendPaymentReminder')->dailyAt('8:00');

            $schedule->command('pos:AmazonSyncOrder')->dailyAt('22:00');

            

        }

        if ($env === 'demo') {
            //IMPORTANT NOTE: This command will delete all business details and create dummy business, run only in demo server.
            // $schedule->command('pos:dummyBusiness')
            //         ->cron('0 */3 * * *')
            //         //->everyThirtyMinutes()
            //         ->emailOutputTo($email);
        }
    }

    /**
     * Register the Closure based commands for the application.
     *
     * @return void
     */
    protected function commands()
    {
        $this->load(__DIR__.'/Commands');
        require base_path('routes/console.php');
    }
}
